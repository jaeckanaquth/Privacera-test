[
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "jsonify",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "pipeline",
        "importPath": "transformers",
        "description": "transformers",
        "isExtraImport": true,
        "detail": "transformers",
        "documentation": {}
    },
    {
        "label": "home",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def home():\n    return render_template('index.html')\n@app.route('/translate', methods=['POST'])\ndef translate():\n    user_input = request.form['user_input']\n    # Perform translation\n    translated = translator(user_input, max_length=100)[0]['translation_text']\n    # Correct the grammar of the translation\n    corrected = grammar_corrector(translated, max_length=100, num_return_sequences=1)[0]['generated_text']\n    return jsonify({\"translated\": translated, \"corrected\": corrected})",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "translate",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def translate():\n    user_input = request.form['user_input']\n    # Perform translation\n    translated = translator(user_input, max_length=100)[0]['translation_text']\n    # Correct the grammar of the translation\n    corrected = grammar_corrector(translated, max_length=100, num_return_sequences=1)[0]['generated_text']\n    return jsonify({\"translated\": translated, \"corrected\": corrected})\nif __name__ == '__main__':\n    app.run(debug=True)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app = Flask(__name__)\n# Load the translation and grammar correction models\ntranslator = pipeline(\"translation_en_to_fr\", model=\"Helsinki-NLP/opus-mt-en-fr\")  # English to French translation model\ngrammar_corrector = pipeline(\"text2text-generation\", model=\"t5-base\")  # Grammar correction\n@app.route('/')\ndef home():\n    return render_template('index.html')\n@app.route('/translate', methods=['POST'])\ndef translate():\n    user_input = request.form['user_input']",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "translator",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "translator = pipeline(\"translation_en_to_fr\", model=\"Helsinki-NLP/opus-mt-en-fr\")  # English to French translation model\ngrammar_corrector = pipeline(\"text2text-generation\", model=\"t5-base\")  # Grammar correction\n@app.route('/')\ndef home():\n    return render_template('index.html')\n@app.route('/translate', methods=['POST'])\ndef translate():\n    user_input = request.form['user_input']\n    # Perform translation\n    translated = translator(user_input, max_length=100)[0]['translation_text']",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "grammar_corrector",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "grammar_corrector = pipeline(\"text2text-generation\", model=\"t5-base\")  # Grammar correction\n@app.route('/')\ndef home():\n    return render_template('index.html')\n@app.route('/translate', methods=['POST'])\ndef translate():\n    user_input = request.form['user_input']\n    # Perform translation\n    translated = translator(user_input, max_length=100)[0]['translation_text']\n    # Correct the grammar of the translation",
        "detail": "app",
        "documentation": {}
    }
]